{"version":3,"sources":["utilities/gameFunctions.js","utilities/Logger.js","classes/Item.js","classes/ItemMultiplier.js","data/gameData.js","components/Stats/Stats.js","components/ItemList/ItemList.js","components/Score/Score.js","components/Salary/Salary.js","components/DefaultItemButton/DefaultItemButton.js","views/Layout/Layout.js","views/GameOver/GameOver.js","views/Lore/Lore.js","views/About/About.js","views/Contact/Contact.js","views/Advert/Advert.js","components/Game/Game.js","App.js","index.js"],"names":["instance","gameFunctions","this","numberFormat","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","integerFormat","scoreFormat","currency","doBindings","formatNumber","bind","formatScore","formatInteger","canShowItems","calculateSalary","item","cost","baseCost","i","quantity","costModifier","number","Number","format","score","href","document","location","items","slice","forEach","multipliers","length","perSecondMultiplier","basePerSecondMultiplier","multiplier","test","expression","active","calculateItemMultipliers","perSecond","calculatePerSecond","max","Math","floor","random","currentScore","canShow","one","calculateBuyNItem","five","ten","hundred","amount","count","modifier","price","iterator","Logger","options","console","table","Item","name","manager","prices","ItemMultiplier","label","addProps","debug","startingIndex","id","calculateItemPrices","gameData","Stats","props","state","showStats","setState","className","clickDebug","debugClickDefaultItem","stats","FPS","tickLength","salaryTime","maxScore","salary","defaultItemClicks","onClick","toggleStatsDisplay","React","Component","ItemList","word","map","index","markup","itemIds","parents","concat","pluralise","disabled","purchaseItem","Score","testScore","abs","newScore","timer","setInterval","tick","clearInterval","Salary","fontSize","salaryTimer","DefaultItemButton","defaultItemClickHandler","setTimeout","handleClick","Layout","bonusActive","bonusMultiplier","bonusDoubled","float","saveGame","window","confirm","clearSaveData","restartGame","version","GameOver","Lore","About","Contact","htmlFor","type","rows","Advert","bonusAmount","selectBonusAmount","selectBonusMultiplier","handleSubmit","e","target","value","adHandler","onSubmit","onChange","Game","timers","defaults","bonusTimer","saveTimer","debugGameData","globalGame","views","layout","gameover","advert","lore","about","contact","initialState","gameOver","view","game","loadGame","onFocus","onBlur","changeView","title","doubled","localStorage","removeItem","log","message","showToast","storage","saveData","timestamp","Date","now","setItem","JSON","stringify","parse","getItem","defaultItems","mapItemMultipliers","date","diff","toAdd","startTicking","toastMessage","stateItems","Array","from","dItem","sItem","takeSalary","newMaxScore","gameTimers","perTickCalculations","clicks","stopTicking","foundItem","App","toastOptions","position","toast","success","error","ReactDOM","render","StrictMode","getElementById"],"mappings":"kVAAIA,ECAAA,E,iFDyOEC,EAAgB,I,WA/NlB,aAEI,GAFW,oBAEPD,EACA,OAAOA,EAEXA,EAAWE,KAEXA,KAAKC,aAAe,IAAIC,KAAKC,aACzB,QACA,CACIC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IAI/BN,KAAKO,cAAgB,IAAIL,KAAKC,aAC1B,QACA,CACIC,MAAO,UACPC,sBAAuB,EACvBC,sBAAuB,IAI/BN,KAAKQ,YAAc,IAAIN,KAAKC,aACxB,QACA,CACIC,MAAO,WACPK,SAAU,MACVJ,sBAAuB,EACvBC,sBAAuB,IAI/BN,KAAKU,a,yDAOLV,KAAKW,aAAeX,KAAKW,aAAaC,KAAKZ,MAC3CA,KAAKa,YAAcb,KAAKa,YAAYD,KAAKZ,MACzCA,KAAKc,cAAgBd,KAAKc,cAAcF,KAAKZ,MAC7CA,KAAKe,aAAef,KAAKe,aAAaH,KAAKZ,MAC3CA,KAAKgB,gBAAkBhB,KAAKgB,gBAAgBJ,KAAKZ,Q,sDAQrBiB,GAE5B,IADA,IAAIC,EAAOD,EAAKE,SACPC,EAAI,EAAGA,EAAIH,EAAKI,SAAUD,IAC/BF,GAAQD,EAAKK,aAEjB,OAAOJ,I,sCAOKK,GACZ,OAAyB,GAAjBC,OAAOD,K,mCAQNA,GACT,OAAOvB,KAAKC,aAAawB,OAAOF,EAAO,O,kCAO/BG,GACR,OAAO1B,KAAKQ,YAAYiB,OAAOC,EAAM,O,oCAO3BH,GACV,OAAOvB,KAAKO,cAAckB,OAAOF,EAAO,O,oCAOxC,IAAII,EAAOC,SAASC,SACpBD,SAASC,SAAWF,I,+CAOCG,GAAQ,IAAD,OAmB5B,OAlBAA,EAAQA,EAAMC,SAERC,SAAQ,SAACf,GACPA,EAAKgB,YAAYC,SACjBjB,EAAKkB,oBAAsBlB,EAAKmB,wBAChCnB,EAAKgB,YAAYD,SAAQ,SAACK,GACtB,IAAIC,EAAOD,EAAWE,WAAWtB,GAAQoB,EAAWA,WAChDC,IACArB,EAAKkB,qBAAuBG,EAC5BD,EAAWG,QAAS,OAI5BvB,EAAKa,QACLb,EAAKa,MAAQ,EAAKW,yBAAyBxB,EAAKa,WAIjDA,I,yCAQQA,GAAQ,IAAD,OAClBY,EAAY,EAOhB,OANAZ,EAAME,SAAQ,SAACf,GACXyB,GAAezB,EAAKyB,UAAYzB,EAAKI,SAAYJ,EAAKkB,oBAClDlB,EAAKa,QACLY,GAAa,EAAKC,mBAAmB1B,EAAKa,WAG3CY,I,kCAQS,IAAVE,EAAS,uDAAH,EACZ,OAAOpB,OAAQqB,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,EAAM,O,mCAQlDd,GAA0B,IAAD,OAAlBkB,EAAkB,uDAAH,EAY/B,OAXAlB,EAAQA,EAAMC,SACRC,SAAQ,SAAAf,GACLA,EAAKgC,SACFD,GAAiB/B,EAAKE,SAAW,IAAM,KACvCF,EAAKgC,SAAU,GAGnBhC,EAAKa,QACLb,EAAKa,MAAQ,EAAKf,aAAaE,EAAKa,MAAOkB,OAG5ClB,I,0CAGSb,GAChB,MAAO,CACHiC,IAAKnD,EAAcoD,kBAAkBlC,EAAM,GAC3CmC,KAAMrD,EAAcoD,kBAAkBlC,EAAM,GAC5CoC,IAAKtD,EAAcoD,kBAAkBlC,EAAM,IAC3CqC,QAASvD,EAAcoD,kBAAkBlC,EAAM,Q,wCAUrCA,EAAMsC,GAA2B,IAAnBP,EAAkB,uDAAH,EAC3C,GAAsB,kBAAXO,EAAqB,CAO5B,IANA,IAAIlC,EAAWJ,EAAKI,SAChBmC,EAAQvC,EAAKI,SAAWkC,EACxBE,EAAWxC,EAAKK,aAChBJ,EAAOD,EAAKE,SACZuC,EAAQ,EAEHtC,EAAI,EAAGA,EAAIoC,EAAOpC,IACnBA,EAAI,IAAGF,GAAQuC,GACbrC,EAAE,EAAKC,IAAUqC,GAASxC,GAGpC,OAAOwC,EAEJ,GAAe,QAAXH,EAAkB,CAIzB,IAHA,IAAIrC,EAAO,EACPwC,EAAQ,EACRC,EAAW,GACND,EAAQ1D,KAAKmD,kBAAkBlC,EAAM0C,IAAaX,GACvDW,GAAY,EACZzC,EAAOwC,EAEX,OAASC,EAAW,IAAO,EAAK,CAC5BzC,KAAMwC,EACNH,OAAQ,GACR,CACArC,KAAMA,EACNqC,OAASI,EAAW,Q,MAQrB5D,ICrNA6D,EAFF,I,WAjBT,aACI,GADW,oBACP9D,EACA,OAAOA,EAEXA,EAAWE,K,gDAMX6D,GACIC,SACAA,QAAQC,MAAMF,O,MCfLG,EAqBjB,aAUG,IATCC,EASF,uDATS,GACP9C,EAQF,uDARa,EACXG,EAOF,uDAPiB,MACfD,EAMF,uDANa,EACXqB,EAKF,uDALc,EACZP,EAIF,uDAJwB,EACtB+B,IAGF,yDAFEjC,EAEF,uDAFgB,GACdH,EACF,uDADU,GACV,yBA1BFM,wBAA0B,EA0BxB,KAjBF+B,OAAS,CACLjB,IAAK,EACLE,KAAM,EACNC,IAAK,EACLC,QAAS,GAcTtD,KAAKiE,KAAOA,EACZjE,KAAKmB,SAAWA,EAChBnB,KAAKsB,aAAeA,EACpBtB,KAAKqB,SAAWA,EAChBrB,KAAK0C,UAAYA,EACjB1C,KAAKmC,oBAAsBA,EAC3BnC,KAAKoC,wBAA0BD,EAC/BnC,KAAKkE,QAAUA,EACflE,KAAKiC,YAAcA,EACnBjC,KAAK8B,MAAQA,EACb9B,KAAKmE,OAAOjB,IAAM/B,GC1CLiD,EAMjB,WAAY7B,GAA2D,IAA/CF,EAA8C,uDAAjC,EAAKgC,EAA4B,uDAApB,GAAI7B,EAAgB,iFAJtEH,WAAa,EAIyD,KAHtEgC,MAAQ,GAG8D,KAFtE7B,QAAS,EAGLxC,KAAKuC,WAAaA,EAClBvC,KAAKqC,WAAaA,EAClBrC,KAAKqE,MAAQA,EACbrE,KAAKwC,OAASA,GCFhBV,EAAQ,CACV,IAAIkC,EAAK,WAAY,IAAO,MAAO,EAAG,GAAI,GAAK,EAAM,CACjD,IAAII,GAAe,SAACnD,GAAD,OAAW4B,KAAKC,MAAM7B,EAAKI,SAAS,OAAO,GAAK,4BACnE,IAAI+C,GAAe,SAACnD,GAAD,OAAW4B,KAAKC,MAAM7B,EAAKI,SAAS,OAAQ,GAAK,8BACrE,CACC,IAAI2C,EAAK,OAAQ,IAAQ,MAAO,EAAG,GAAI,GAAK,EAAM,CAC9C,IAAII,GAAe,SAACnD,GAAD,OAAW4B,KAAKC,MAAM7B,EAAKI,SAAS,OAAO,GAAK,6BACpE,MAGP,IAAI2C,EAAK,QAAS,IAAS,MAAO,EAAG,IAAK,GAAK,EAAM,CACjD,IAAII,GAAe,SAACnD,GAAD,OAAW4B,KAAKC,MAAM7B,EAAKI,SAAS,OAAO,EAAK,8BACpE,CACC,IAAI2C,EAAK,cAAe,IAAW,MAAO,EAAG,IAAM,GAAK,EAAM,GAAI,CAC9D,IAAIA,EAAK,aAAc,KAAa,MAAO,EAAG,IAAM,GAAK,EAAM,GAAI,QAG3E,IAAIA,EAAK,aAAc,KAAe,MAAO,EAAG,IAAS,GAAK,EAAM,GAAI,IACxE,IAAIA,EAAK,cAAe,KAAiB,MAAO,EAAG,IAAU,GAAK,EAAM,GAAI,KAGhF,SAASM,IAAmD,IAA1CC,EAAyC,wDAA1BzC,EAA0B,uCAAnB0C,EAAmB,uDAAH,EAepD,OAbA1C,EAAME,SAAQ,SAACf,GACRsD,IACCtD,EAAKE,UAAY,KAErBF,EAAKwD,GAAKD,IACVvD,EAAKgC,SAAU,EACfhC,EAAKkD,OAASpE,EAAc2E,oBAAoBzD,GAE5CA,EAAKa,QACLb,EAAKa,MAAQwC,EAASC,EAAOtD,EAAKa,WAInCA,EAGI,SAAS6C,IAAyB,IAAhBJ,EAAe,wDAC5C,OAAOD,EAASC,EAAOzC,G,UC5CN8C,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,WAAW,GAHA,E,iEAQf/E,KAAKgF,SAAS,CACVD,WAAY/E,KAAK8E,MAAMC,c,+BAIrB,IAAD,OACCR,EAASvE,KAAK6E,MAAMN,MAAa,oBAAIU,UAAU,eAAd,8BAAL,GAC5BC,EAAclF,KAAK6E,MAAMM,sBAG3B,qBAAIF,UAAU,eAAd,yDAA0ElF,EAAce,cAAcd,KAAK6E,MAAMM,uBAAjH,OAFA,GAIEC,EAAQpF,KAAK8E,MAAMC,UACrB,+BACKR,EACAW,EACD,uCAAUlF,KAAK6E,MAAMQ,OACrB,sDAAyBtF,EAAcY,aAAaX,KAAK6E,MAAMS,eAC/D,4CAAevF,EAAcY,aAAcX,KAAK6E,MAAMnC,UAAY1C,KAAK6E,MAAM1C,oBAAuB,IAAOnC,KAAK6E,MAAMQ,QACtH,8CAAiBtF,EAAcY,aAAaX,KAAK6E,MAAMnC,UAAY1C,KAAK6E,MAAM1C,wBAC9E,kDAAqBpC,EAAcY,aAAaX,KAAK6E,MAAMnC,UAAY1C,KAAK6E,MAAM1C,oBAAsB,OACxG,+CAAkBnC,KAAK6E,MAAMU,cAC7B,8CAAiBxF,EAAcc,YAAYb,KAAK6E,MAAMW,aACtD,kDAAqBzF,EAAcc,YAAYb,KAAK6E,MAAM7B,iBAC1D,0CAAajD,EAAcc,YAAYb,KAAK6E,MAAMY,WAClD,wDAA2B1F,EAAce,cAAcd,KAAK6E,MAAMa,yBAC9D,GACZ,OACI,sBAAKT,UAAU,QAAf,UACI,mBAAGA,UAAU,gBAAgBU,QAAS,kBAAM,EAAKC,sBAAjD,mBACCR,S,GAxCkBS,IAAMC,WCApBC,G,8KAEPC,EAAMzC,GACZ,MAAa,aAATyC,EACOA,EAEQ,IAAXzC,GAAgBA,EAAS,EAAKyC,EAAO,IAAMA,I,kCAG3C/E,GACR,GAAKA,EAAKgB,YAGV,OAAOhB,EAAKgB,YAAYgE,KAAI,SAAC5D,EAAY6D,GACrC,OAAI7D,EAAWG,OAEP,4BAAgBH,EAAWgC,OAAnB6B,GAGT,Q,+BAIL,IAAD,OAECC,EAASnG,KAAK6E,MAAM/C,MAAMmE,KAAI,SAAChF,GACjC,IAAMmF,EAAU,EAAKvB,MAAMwB,QAAQtE,QAAQuE,OAAOrF,EAAKwD,IACnD7B,EAAM7C,EAAcoD,kBAAkBlC,EAAM,MAAO,EAAK4D,MAAM7B,cAClE,OACI,oBAAkBiC,UAAWhE,EAAKgC,QAAU,GAAK,SAAjD,SACI,sBAAKgC,UAAU,gBAAf,UACI,8BAAIhE,EAAKI,SAAT,IAAoB,EAAKkF,UAAUtF,EAAKgD,KAAMhD,EAAKI,UAAnD,MAAiEtB,EAAcY,aAAcM,EAAKI,SAAWJ,EAAKyB,UAAazB,EAAKkB,qBAApI,iBACA,sBAAK8C,UAAU,aAAf,UACI,yBACIuB,SAAW,EAAK3B,MAAM7B,aAAe/B,EAAKkD,OAAOjB,IACjDyC,QAAS,kBAAM,EAAKd,MAAM4B,aAAaL,EAAS,EAAGnF,EAAKkD,OAAOjB,MAFnE,mBAIU,uBAAMnD,EAAcc,YAAYI,EAAKkD,OAAOjB,QAGtD,yBACIsD,SAAW,EAAK3B,MAAM7B,aAAe/B,EAAKkD,OAAOf,KACjDuC,QAAS,kBAAM,EAAKd,MAAM4B,aAAaL,EAAS,EAAGnF,EAAKkD,OAAOf,OAFnE,mBAIU,uBAAMrD,EAAcc,YAAYI,EAAKkD,OAAOf,SAEtD,yBACIoD,SAAW,EAAK3B,MAAM7B,aAAe/B,EAAKkD,OAAOd,IACjDsC,QAAS,kBAAM,EAAKd,MAAM4B,aAAaL,EAAS,GAAInF,EAAKkD,OAAOd,MAFpE,oBAIW,uBAAMtD,EAAcc,YAAYI,EAAKkD,OAAOd,QAEvD,yBACImD,SAAW,EAAK3B,MAAM7B,aAAe/B,EAAKkD,OAAOb,QACjDqC,QAAS,kBAAM,EAAKd,MAAM4B,aAAaL,EAAS,IAAKnF,EAAKkD,OAAOb,UAFrE,qBAIY,uBAAMvD,EAAcc,YAAYI,EAAKkD,OAAOb,YAExD,yBACIkD,SAAW,EAAK3B,MAAM7B,aAAeJ,EAAI1B,KACzCyE,QAAS,kBAAM,EAAKd,MAAM4B,aAAaL,EAASxD,EAAIW,OAAQX,EAAI1B,OAFpE,kBAIU0B,EAAIW,OAAO,uBAAMxD,EAAcc,YAAY+B,EAAI1B,YAK7D,qBAAK+D,UAAU,cAAf,SACK,EAAKhD,YAAYhB,KAGtB,cAAC8E,EAAD,CACIjE,MAAOb,EAAKa,MACZkB,aAAc,EAAK6B,MAAM7B,aACzBqD,QAASD,EACTK,aAAc,EAAK5B,MAAM4B,mBA9C5BxF,EAAKwD,OAqDtB,OACI,qBAAKQ,UAAU,WAAf,SACI,6BACKkB,U,GArFiBN,IAAMC,YCAvBY,G,wDAGjB,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTpD,MAAO,EAAKmD,MAAM7B,cAHP,E,qDAQf,OACI,qBAAKiC,UAAU,QAAf,SACI,4BAAIlF,EAAcc,YAAYb,KAAK8E,MAAMpD,a,6BAOjD,IAAIiF,EAAa3G,KAAK6E,MAAM7B,aAAehD,KAAK8E,MAAMpD,MACtD,GAAImB,KAAK+D,IAAID,GAAa,IACtB3G,KAAKgF,SAAS,CAACtD,MAAO1B,KAAK6E,MAAM7B,oBAIrC,GAAIhD,KAAK8E,MAAMpD,QAAU1B,KAAK6E,MAAM7B,aAAc,CAC9C,IAAI6D,EACCF,EACC3G,KAAK6E,MAAMS,WAAa,IAE9BtF,KAAKgF,SAAS,CACVtD,MAAO1B,KAAK8E,MAAMpD,MAAQmF,O,0CAKjB,IAAD,OAChB7G,KAAK8G,MAAQC,aACT,kBAAM,EAAKC,SACXhH,KAAK6E,MAAMS,c,6CAKf2B,cAAcjH,KAAK8G,W,GA7CQjB,IAAMC,YCApBoB,G,6KAEb,IAAIC,EAAWtE,KAAKD,IAAI,GAAI,GAAK5C,KAAK6E,MAAMuC,aAC5C,OACI,qBAAKnC,UAAU,SAAf,SACI,mBAAG7E,MAAO,CAAC+G,SAAUA,EAAW,MAAhC,SAAwCpH,EAAcc,YAAYb,KAAK6E,MAAMY,gB,GALzDI,IAAMC,YCDrBuB,G,wDACjB,WAAYxC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT0B,UAAU,GAHC,E,0DAOJ,IAAD,OACLxG,KAAK8E,MAAM0B,UACZxG,KAAK6E,MAAMyC,0BAEftH,KAAKgF,SAAS,CAACwB,UAAU,IAAO,WAC5Be,YACI,WAAO,EAAKvC,SAAS,CAACwB,UAAU,MAChC,U,+BAKF,IAAD,OACL,OACI,qBAAKvB,UAAU,oBAAf,SACI,wBAAQU,QAAS,kBAAM,EAAK6B,eAAehB,SAAUxG,KAAK8E,MAAM0B,SAAhE,6B,GAvB+BX,IAAMC,YCMhC2B,G,6KACP,IAAD,OACCrC,EAAQpF,KAAK6E,MAAMN,MACrB,cAAC,EAAD,CACIc,IAAKrF,KAAK6E,MAAMQ,IAChBd,MAAOvE,KAAK6E,MAAMN,MAClBe,WAAYtF,KAAK6E,MAAMS,WACvB5C,UAAW1C,KAAK6E,MAAMnC,UACtBP,oBAAqBnC,KAAK6E,MAAM1C,oBAChCa,aAAchD,KAAK6E,MAAM7B,aACzBwC,SAAUxF,KAAK6E,MAAMW,SACrBC,OAAQzF,KAAK6E,MAAMY,OACnBF,WAAYvF,KAAK6E,MAAMU,WACvBG,kBAAmB1F,KAAK6E,MAAMa,kBAC9BP,sBAAuBnF,KAAK6E,MAAMM,wBACjC,KAET,OACI,sBAAKF,UAAU,SAAf,UACI,qBAAKA,UAAU,QAAf,SACKG,IAGL,sBAAKH,UAAU,iBAAf,UACI,cAAC,EAAD,CACIK,WAAYtF,KAAK6E,MAAMS,WACvBtC,aAAchD,KAAK6E,MAAM7B,aACzBN,UAAW1C,KAAK6E,MAAMnC,UACtBP,oBAAqBnC,KAAK6E,MAAM1C,oBAChCuF,YAAa1H,KAAK6E,MAAM6C,YACxBC,gBAAiB3H,KAAK6E,MAAM8C,gBAC5BC,aAAc5H,KAAK6E,MAAM+C,eAE7B,cAAC,EAAD,CACInC,OAAQzF,KAAK6E,MAAMY,OACnB2B,YAAapH,KAAK6E,MAAMuC,iBAGhC,sBAAKnC,UAAU,QAAf,UACI,cAAC,EAAD,CACIqC,wBAAyBtH,KAAK6E,MAAMyC,0BAExC,cAAC,EAAD,CACIxF,MAAO9B,KAAK6E,MAAM/C,MAClBkB,aAAchD,KAAK6E,MAAM7B,aACzBqD,QAAS,GACTI,aAAczG,KAAK6E,MAAM4B,kBAGjC,qBAAKxB,UAAU,SAAf,SACI,+BACI,uBAAM7E,MAAO,CAACyH,MAAO,QAArB,UACI,wBAAQlC,QAAS,kBAAM,EAAKd,MAAMiD,UAAS,IAA3C,uBACA,wBAAQnC,QAAS,WAAUoC,OAAOC,QAAQ,6BAA6B,EAAKnD,MAAMoD,gBAAiBlI,EAAcmI,gBAAjH,qCAHR,mCAKuClI,KAAK6E,MAAMsD,oB,GAvDlCtC,IAAMC,YCNrBsC,E,uKAEb,OACI,sBAAKnD,UAAU,WAAf,UACI,4CACA,4CACA,+BACI,uDAA0BlF,EAAcc,YAAYb,KAAK6E,MAAMW,UAA/D,OACA,8CAAiBzF,EAAcc,YAAYb,KAAK6E,MAAMnC,WAAtD,kBACA,0DAA6B3C,EAAce,cAAcd,KAAK6E,MAAMa,mBAApE,UAEJ,wBAAQC,QAAS,kBAAM5F,EAAcmI,eAArC,4B,GAXsBrC,IAAMC,WCDvBuC,E,uKAEb,OACI,sBAAKpD,UAAU,OAAf,UACI,uCACA,yR,GALkBY,IAAMC,WCAnBwC,E,uKAEb,OACI,sBAAKrD,UAAU,QAAf,UACI,uCACA,2DACA,qE,GANmBY,IAAMC,WCApByC,E,uKAEb,OACI,sBAAKtD,UAAU,UAAf,UACI,yCACA,iCACI,sBAAKA,UAAU,QAAf,UACI,uBAAOuD,QAAS,QAAhB,oBACA,uBAAOC,KAAK,OAAOxE,KAAK,QAAQQ,GAAG,aAEvC,sBAAKQ,UAAU,QAAf,UACI,uBAAOuD,QAAQ,UAAf,sBACA,0BAAUvE,KAAK,UAAUQ,GAAG,UAAUiE,KAAK,UAE/C,qBAAKzD,UAAU,QAAf,SACI,wBAAQwD,KAAM,SAAd,sC,GAfa5C,IAAMC,WCCtB6C,G,wDACjB,WAAY9D,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT8D,YAAa,EACbjB,iBAAiB,GAErB,EAAKkB,kBAAoB,EAAKA,kBAAkBjI,KAAvB,gBACzB,EAAKkI,sBAAwB,EAAKA,sBAAsBlI,KAA3B,gBAC7B,EAAKmI,aAAe,EAAKA,aAAanI,KAAlB,gBARL,E,8DAWDoI,GACdhJ,KAAKgF,SAAS,CACV4D,YAAapH,OAAOwH,EAAEC,OAAOC,W,4CAIfF,GAClBhJ,KAAKgF,SAAS,CACV2C,gBAAqC,SAAnBqB,EAAEC,OAAOC,U,qCAK/BlJ,KAAK6E,MAAMsE,UAAUnJ,KAAK8E,MAAM8D,YAAa5I,KAAK8E,MAAM6C,mB,+BAIxD,OACI,sBAAK1C,UAAU,SAAf,UACI,wCACA,uBAAMmE,SAAUpJ,KAAK+I,aAArB,UACI,sBAAK9D,UAAU,QAAf,UACI,kDACA,yBAAQhB,KAAK,QAAQQ,GAAG,QAAQ4E,SAAUrJ,KAAK6I,kBAA/C,UACI,wBAAQK,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,gBACA,wBAAQA,MAAM,IAAd,sBAGR,sBAAKjE,UAAU,QAAf,UACI,mDACA,yBAAQhB,KAAK,QAAQQ,GAAG,QAAQ4E,SAAUrJ,KAAK8I,sBAA/C,UACI,wBAAQI,MAAM,QAAd,gBACA,wBAAQA,MAAM,OAAd,uBAGR,sBAAKjE,UAAU,QAAf,UACI,0BACA,iE,GApDYY,IAAMC,YCSrBwD,G,wDA6DjB,WAAYzE,GAAQ,IAAD,8BACf,cAAMA,IA3DVQ,IAAM,GA0Da,EAvDnBkE,OAAS,CACLC,SAAU,CAENpC,YAAa,GACbqC,WAAY,IACZC,UAAW,KAGftC,YAAa,EACbqC,WAAY,EACZC,UAAW,GA6CI,EAzCnBnF,OAAQ,EAyCW,EAvCnBoF,eAAgB,EAuCG,EArCnBxE,uBAAwB,EAqCL,EAnCnByE,YAAa,EAmCM,EAjCnBC,MAAQ,CACJC,OAAQ,SACRC,SAAU,WACVC,OAAQ,SACRC,KAAM,OACNC,MAAO,QACPC,QAAS,WA2BM,EAhBnBC,aAAe,CACX1E,kBAAmB,EACnBhD,UAAW,EACXP,oBAAqB,EACrBa,aAAc,EACdwC,SAAU,EACVC,OAAQ,EACR4E,UAAU,EACVvI,MAAO,GACP4F,aAAa,EACbE,cAAc,EACdD,gBAAiB,EACjB2C,KAAM,EAAKT,MAAMC,OACjBP,OAAQ,IAMR,EAAKjE,WAAa,IAAO,EAAKD,IAC9B,EAAKP,MAAQ,EAAKsF,aAClB,EAAK1J,aACD,EAAKkJ,aACL7B,OAAOwC,KAAP,gBAPW,E,yDAYfvK,KAAKsH,wBAA0BtH,KAAKsH,wBAAwB1G,KAAKZ,MACjEA,KAAKyG,aAAezG,KAAKyG,aAAa7F,KAAKZ,MAC3CA,KAAK8H,SAAW9H,KAAK8H,SAASlH,KAAKZ,MACnCA,KAAKwK,SAAWxK,KAAKwK,SAAS5J,KAAKZ,MACnCA,KAAKiI,cAAgBjI,KAAKiI,cAAcrH,KAAKZ,MAC7CA,KAAKyK,QAAUzK,KAAKyK,QAAQ7J,KAAKZ,MACjCA,KAAK0K,OAAS1K,KAAK0K,OAAO9J,KAAKZ,MAC/BA,KAAKmJ,UAAYnJ,KAAKmJ,UAAUvI,KAAKZ,MACrCA,KAAK2K,WAAa3K,KAAK2K,WAAW/J,KAAKZ,Q,iCAGhCsK,GACPtK,KAAKgF,SAAS,CAACsF,KAAMA,M,+BAGf,IACFnE,EADC,OAEL,OAAQnG,KAAK8E,MAAMwF,MACf,KAAKtK,KAAK6J,MAAMC,OAChB,QACI3D,EACI,cAAC,EAAD,CACIyE,MAAO5K,KAAK6E,MAAM+F,MAClBzC,QAASnI,KAAK6E,MAAMsD,QACpB5D,MAAOvE,KAAKuE,MACZc,IAAKrF,KAAKqF,IACVqC,YAAa1H,KAAK8E,MAAM4C,YACxBC,gBAAiB3H,KAAK8E,MAAM6C,gBAC5BC,aAAc5H,KAAK8E,MAAM8C,aACzBtC,WAAYtF,KAAKsF,WACjB5C,UAAW1C,KAAK8E,MAAMpC,UACtBP,oBAAqBnC,KAAK8E,MAAM3C,oBAChCa,aAAchD,KAAK8E,MAAM9B,aACzBwC,SAAUxF,KAAK8E,MAAMU,SACrBC,OAAQzF,KAAK8E,MAAMW,OACnBF,WAAYvF,KAAKuJ,OAAOC,SAASjE,WACjC6B,YAAapH,KAAKuJ,OAAOnC,YACzBiD,SAAUrK,KAAK8E,MAAMuF,SACrBvI,MAAO9B,KAAK8E,MAAMhD,MAClB2E,aAAczG,KAAKyG,aACnBa,wBAAyBtH,KAAKsH,wBAC9B5B,kBAAmB1F,KAAK8E,MAAMY,kBAC9BP,sBAAuBnF,KAAKmF,sBAC5B2C,SAAU9H,KAAK8H,SACfG,cAAejI,KAAKiI,cACpBkB,UAAWnJ,KAAKmJ,YAExB,MAEJ,KAAKnJ,KAAK6J,MAAME,SACZ5D,EACI,cAAC,EAAD,CACIX,SAAUxF,KAAK8E,MAAMU,SACrB9C,UAAW1C,KAAK8E,MAAMpC,UACtBgD,kBAAmB1F,KAAK8E,MAAMY,kBAC9B5D,MAAO9B,KAAK8E,MAAMhD,QAE1B,MACJ,KAAK9B,KAAK6J,MAAMI,KACZ9D,EACI,cAAC,EAAD,CACIrE,MAAO9B,KAAK8E,MAAMhD,QAG1B,MACJ,KAAK9B,KAAK6J,MAAMK,MACZ/D,EAAS,cAAC,EAAD,IACT,MACJ,KAAKnG,KAAK6J,MAAMM,QACZhE,EAAS,cAAC,EAAD,IACT,MACJ,KAAKnG,KAAK6J,MAAMG,OACZ7D,EACI,cAAC,EAAD,CACIgD,UAAWnJ,KAAKmJ,YAKhC,OACI,sBAAKlE,UAAU,OAAf,UACI,qBAAKA,UAAU,WAAf,SACI,6BAAKjF,KAAK6E,MAAM+F,UAEpB,sBAAK3F,UAAU,aAAf,UACI,wBAAQU,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAMC,SAAlD,kBACA,wBAAQnE,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAME,WAAlD,uBACA,wBAAQpE,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAMI,OAAlD,kBACA,wBAAQtE,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAMK,QAAlD,mBACA,wBAAQvE,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAMM,UAAlD,qBACA,wBAAQxE,QAAS,kBAAM,EAAKgF,WAAW,EAAKd,MAAMG,SAAlD,uBAEJ,qBAAK/E,UAAU,OAAf,SACKkB,S,kCAM2B,IAAD,OAAjC9D,EAAiC,uDAApB,EAAGwI,EAAiB,wDACvC7K,KAAKuJ,OAAOE,WAAcpH,EAAa,EAAKrC,KAAKuJ,OAAOC,SAASC,WAAa,EAC9EzJ,KAAKgF,SAAS,CACVsF,KAAMtK,KAAK6J,MAAMC,OACjBpC,YAAcrF,EAAa,EAC3BuF,aAAciD,EACdlD,gBAAiBtF,IAClB,WACC,EAAKyF,UAAS,Q,sCAKJC,OAAO+C,aACbC,WAAW,YACf/K,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,+B,iCAKQ,IAApBC,EAAmB,wDACpBC,EAAUpD,OAAO+C,aACjBM,EAAQ,eAAOpL,KAAK8E,OACxBsG,EAAS7B,OAAT,eAAsBvJ,KAAKuJ,QAC3B6B,EAASC,UAAYC,KAAKC,MAC1BJ,EAAQK,QAAQ,WAAYC,KAAKC,UAAUN,IACvCF,GACAlL,KAAK6E,MAAMqG,UAAU,aAAc,QAEnClL,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,oBACTG,SAAUA,M,iCAMO,IAAD,OAAnBF,EAAmB,wDACpBC,EAAUpD,OAAO+C,aACjBhG,EAAQ2G,KAAKE,MAAMR,EAAQS,QAAQ,aACvC,GAAK9G,EAAL,CAGA9E,KAAKuJ,OAAL,eAAkBzE,EAAMyE,eACjBzE,EAAMyE,OAEb,IAAIsC,EAAelH,EAAS3E,KAAK2J,eACjC3J,KAAK8L,mBAAmBD,EAAc/G,EAAMhD,OAC5CgD,EAAMhD,MAAQ/B,EAAc0C,yBAAyBqC,EAAMhD,OAE3D,IAAIiK,EAAOT,KAAKC,MACZS,EAAOnJ,KAAKC,OAAOiJ,EAAOjH,EAAMuG,WAAa,KAC7CY,EAASnH,EAAMpC,UAAYoC,EAAM3C,oBAAuB6J,EAmB5D,GAjBIC,EAAQ,IACRnH,EAAM9B,cAAgBiJ,GAG1BjM,KAAKgF,SACDF,GACA,WACS,EAAKgC,OACN,EAAKoF,kBAKblM,KAAKuE,OACLX,EAAOoH,IAAIlG,GAGXoG,GAAae,EAAQ,EAAG,CACxB,IAAIvK,EAAQ,sBAAMuD,UAAU,QAAhB,SAAyBlF,EAAcc,YAAYoL,KAC3DE,EAAe,mDAAsBzK,EAAtB,2BACnB1B,KAAK6E,MAAMqG,UAAUiB,EAAc,e,yCAKxBN,EAAcO,GAAa,IAAD,OACzCC,MAAMC,KAAKT,GAAc7J,SAAQ,SAAAuK,GAC7BH,EAAWpK,SAAQ,SAAAwK,GACXD,EAAM9H,KAAO+H,EAAM/H,KACnB+H,EAAMvK,YAAcsK,EAAMtK,aAE1BuK,EAAM1K,OACN,EAAKgK,mBAAmBD,EAAcW,EAAM1K,e,mCASpD9B,KAAK8E,MAAMW,OAAS,IACY,IAA5BzF,KAAKuJ,OAAOnC,aACZpH,KAAKyM,aACLzM,KAAKuJ,OAAOnC,YAAcpH,KAAKuJ,OAAOC,SAASpC,aAE/CpH,KAAKuJ,OAAOnC,cAEZpH,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,eACT/B,MAAOlJ,KAAKuJ,OAAOnC,eAM3BpH,KAAK8E,MAAM4C,cAEP1H,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,cACT/B,MAAOlJ,KAAKuJ,OAAOE,aAII,IAA3BzJ,KAAKuJ,OAAOE,YACZzJ,KAAKgF,SAAS,CACV0C,aAAa,EACbE,cAAc,EACdD,gBAAiB,IAErB3H,KAAKuJ,OAAOE,WAAazJ,KAAKuJ,OAAOC,SAASC,YAE9CzJ,KAAKuJ,OAAOE,cAKhBzJ,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,aACT/B,MAAOlJ,KAAKuJ,OAAOG,YAIG,IAA1B1J,KAAKuJ,OAAOG,WACZ1J,KAAK8H,WACL9H,KAAKuJ,OAAOG,UAAY1J,KAAKuJ,OAAOC,SAASE,WAE7C1J,KAAKuJ,OAAOG,YAGhB1J,KAAKgF,SAAS,CACVuE,OAAO,eAAKvJ,KAAKuJ,Y,4CAKrB,IAAI1C,EAAY7G,KAAK8E,MAAMpC,UAAY1C,KAAK8E,MAAM3C,oBAC9CnC,KAAK8E,MAAM4C,cACXb,GAAY7G,KAAK8E,MAAM6C,gBACvBd,GAAc7G,KAAK8E,MAAM8C,aAAgB,EAAI,GAIjD,IAAI8E,GAFJ7F,GAAY7G,KAAK8E,MAAM9B,cAEMhD,KAAK8E,MAAMU,SAAWqB,EAAW7G,KAAK8E,MAAMU,SACrE1D,EAAQ/B,EAAcgB,aAAaf,KAAK8E,MAAMhD,MAAO9B,KAAK8E,MAAM9B,cAGpEhD,KAAKgF,SAAS,CACVhC,aAAc6D,EACdrB,SAAUkH,EACV5K,MAAOA,EACP2D,OAAQ1F,EAAciB,gBAAgBhB,KAAK8E,MAAMpC,e,6BAKrD1C,KAAK2M,aACL3M,KAAK4M,wB,gDAIL,IAAIrJ,EAAS,KAETvD,KAAKmF,wBACL5B,EAASvD,KAAKmF,uBAGlB5B,GAAUvD,KAAK8E,MAAM6C,gBACjB3H,KAAK8E,MAAM4C,eAEXnE,GADuBvD,KAAK8E,MAAM8C,aAAgB,EAAI,GAI1D,IAAIf,EAAY7G,KAAK8E,MAAM9B,aAAeO,EACtCsJ,EAAU7M,KAAK8E,MAAMY,kBAAoBnC,EAE7CvD,KAAKgF,SAAS,CACVhC,aAAc6D,EACdnB,kBAAmBmH,IAEnB7M,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,0BACT4B,OAAQA,M,qCAKJ,IAAD,OACX7M,KAAK8G,MAAQC,aACT,kBAAM,EAAKC,SACX,O,oCAKJC,cAAcjH,KAAK8G,OACnB9G,KAAK8G,MAAQ,O,0CAGI,IAAD,OAGFiB,OAAO+C,aACTc,QAAQ,YAChB5L,KAAKwK,UAAS,GAEdxK,KAAKgF,SAAS,CACVlD,MAAO6C,EAAS3E,KAAK2J,iBACtB,WACC,EAAK3E,SAAS,CACVtC,UAAW3C,EAAc4C,mBAAmB,EAAKmC,MAAMhD,SACxD,WACC,EAAKoK,uB,6CASjBlM,KAAK8M,gB,gCAID9M,KAAKuE,OACLX,EAAOoH,IAAI,gBAEfhL,KAAKwK,UAAS,K,+BAIVxK,KAAKuE,OACLX,EAAOoH,IAAI,cAEfhL,KAAK8H,WACL9H,KAAK8M,gB,mCAIL,IAAIjG,EAAY7G,KAAK8E,MAAM9B,aAAehD,KAAK8E,MAAMW,OACjDoB,EAAW,IACX7G,KAAK8M,cACL9M,KAAKiI,gBACLjI,KAAKgF,SAAS,CACVqF,UAAU,KAGlBrK,KAAKgF,SAAS,CACVhC,aAAc6D,IAEd7G,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,gBACT1H,OAAQxD,EAAcY,aAAaX,KAAK8E,MAAMW,Y,mCAK7CW,GAAkC,IAEvC2G,EAFsC,OAAxB1L,EAAwB,uDAAb,EAAGH,EAAU,uDAAH,EAGnCY,EAAQ9B,KAAK8E,MAAMhD,MAAMC,QAG7BqE,EAAQpE,SAAQ,SAAAyC,GACZsI,EAAYA,EAAYA,EAAUjL,MAAM2C,GAAM3C,EAAM2C,MAGnDsI,GASDA,EAAU1L,UAAYA,EACtB0L,EAAU5I,OAASpE,EAAc2E,oBAAoBqI,GACrDjL,EAAQ/B,EAAc0C,yBAAyBX,GAE3C9B,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAQ,cAAD,OAAgB8B,EAAU9I,MACjCP,MAAOxC,IAIflB,KAAKgF,SAAS,CACVlD,MAAOA,EACPkB,aAAehD,KAAK8E,MAAM9B,aAAe9B,IAC1C,WACC,EAAK8D,SAAS,CACVtC,UAAW3C,EAAc4C,mBAAmB,EAAKmC,MAAMhD,aAxB3D9B,KAAKuE,OACLX,EAAOoH,IAAI,CACPC,QAAS,oCACT7E,QAASA,EACT/E,SAAUA,Q,GAndIwE,IAAMC,Y,OCNnBkH,G,oLAEP/B,GAA4B,IAAnBxC,EAAkB,uDAAX,UAClBwE,EAAe,CACfC,SAAU,cAEd,OAAOzE,GACH,IAAK,UACD0E,IAAMC,QAAQnC,EAASgC,GACvB,MACJ,IAAK,QACDE,IAAME,MAAMpC,EAASgC,GACrB,MACJ,QACIE,YAAMlC,EAASgC,M,+BAKvB,OACI,sBAAKhI,UAAU,MAAf,UACI,cAAC,EAAD,CACI2F,MAAM,mBACNzC,QAAQ,UACR+C,UAAWlL,KAAKkL,UAAUtK,KAAKZ,QAEnC,cAAC,IAAD,W,GA1BiB6F,IAAMC,Y,MCAvCwH,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJ5L,SAAS6L,eAAe,W","file":"static/js/main.c7a084df.chunk.js","sourcesContent":["let instance;\r\n\r\nclass gameFunctionsClass {\r\n    numberFormat;\r\n    scoreFormat;\r\n    integerFormat;\r\n\r\n    /**\r\n     * constructor\r\n     */\r\n    constructor() {\r\n\r\n        if (instance) {\r\n            return instance;\r\n        }\r\n        instance = this;\r\n\r\n        this.numberFormat = new Intl.NumberFormat(\r\n            'en-GB',\r\n            {\r\n                style: 'decimal',\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            }\r\n        );\r\n\r\n        this.integerFormat = new Intl.NumberFormat(\r\n            'en-GB',\r\n            {\r\n                style: 'decimal',\r\n                minimumFractionDigits: 0,\r\n                maximumFractionDigits: 0\r\n            }\r\n        );\r\n\r\n        this.scoreFormat = new Intl.NumberFormat(\r\n            'en-GB',\r\n            {\r\n                style: 'currency',\r\n                currency: 'EUR',\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2\r\n            }\r\n        )\r\n\r\n        this.doBindings();\r\n    }\r\n\r\n    /**\r\n     * doBindings\r\n     */\r\n    doBindings() {\r\n        this.formatNumber = this.formatNumber.bind(this);\r\n        this.formatScore = this.formatScore.bind(this);\r\n        this.formatInteger = this.formatInteger.bind(this);\r\n        this.canShowItems = this.canShowItems.bind(this);\r\n        this.calculateSalary = this.calculateSalary.bind(this);\r\n    }\r\n\r\n    /**\r\n     * getItemCostWithMultiplier\r\n     * @param item {Item}\r\n     * @returns {number}\r\n     */\r\n    calculateItemCostWithMultiplier(item) {\r\n        let cost = item.baseCost;\r\n        for (let i = 0; i < item.quantity; i++) {\r\n            cost *= item.costModifier;\r\n        }\r\n        return cost;\r\n    }\r\n\r\n    /**\r\n     * @param number {number|string}\r\n     * @returns {number}\r\n     */\r\n    calculateSalary(number) {\r\n        return (Number(number) * 10);\r\n    }\r\n\r\n    /**\r\n     * formatNumber\r\n     * @param number {number|string}\r\n     * @returns {string}\r\n     */\r\n    formatNumber(number) {\r\n        return this.numberFormat.format(number/100);\r\n    }\r\n\r\n    /**\r\n     * @param score {number|string}\r\n     * @returns {string}\r\n     */\r\n    formatScore(score) {\r\n        return this.scoreFormat.format(score/100);\r\n    }\r\n\r\n    /**\r\n     * @param number\r\n     * @returns {string}\r\n     */\r\n    formatInteger(number) {\r\n        return this.integerFormat.format(number/100);\r\n    }\r\n\r\n    /**\r\n     * restartGame\r\n     */\r\n    restartGame() {\r\n        let href = document.location;\r\n        document.location = href;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param items {Item[]}\r\n     */\r\n    calculateItemMultipliers(items) {\r\n        items = items.slice();\r\n\r\n        items.forEach((item) => {\r\n            if (item.multipliers.length) {\r\n                item.perSecondMultiplier = item.basePerSecondMultiplier;\r\n                item.multipliers.forEach((multiplier) => {\r\n                    let test = multiplier.expression(item) * multiplier.multiplier;\r\n                    if (test) {\r\n                        item.perSecondMultiplier += test;\r\n                        multiplier.active = true;\r\n                    }\r\n                });\r\n            }\r\n            if (item.items) {\r\n                item.items = this.calculateItemMultipliers(item.items);\r\n            }\r\n        });\r\n\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param items {Item[]}\r\n     * @returns {number}\r\n     */\r\n    calculatePerSecond(items) {\r\n        let perSecond = 0.0;\r\n        items.forEach((item) => {\r\n            perSecond += ((item.perSecond * item.quantity) * item.perSecondMultiplier);\r\n            if (item.items) {\r\n                perSecond += this.calculatePerSecond(item.items);\r\n            }\r\n        });\r\n        return perSecond;\r\n    }\r\n\r\n    /**\r\n     * getRandom\r\n     * @param max\r\n     * @returns {number}\r\n     */\r\n    getRandom(max = 1) {\r\n        return Number((Math.floor(Math.random() * Math.floor(max + 1))));\r\n    }\r\n\r\n    /**\r\n     * @param items {Item[]}\r\n     * @param currentScore {number}\r\n     * @returns {Item[]}\r\n     */\r\n    canShowItems(items, currentScore = 0) {\r\n        items = items.slice();\r\n        items.forEach(item => {\r\n            if (!item.canShow) {\r\n                if (currentScore >= (item.baseCost / 100 * 75)) {\r\n                    item.canShow = true;\r\n                }\r\n            }\r\n            if (item.items) {\r\n                item.items = this.canShowItems(item.items, currentScore);\r\n            }\r\n        });\r\n        return items;\r\n    }\r\n\r\n    calculateItemPrices(item) {\r\n        return {\r\n            one: gameFunctions.calculateBuyNItem(item, 1),\r\n            five: gameFunctions.calculateBuyNItem(item, 5),\r\n            ten: gameFunctions.calculateBuyNItem(item, 10),\r\n            hundred: gameFunctions.calculateBuyNItem(item, 100),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * calculateBuyNItem\r\n     * @param item {Item}\r\n     * @param amount {number|string}\r\n     * @param currentScore {number}\r\n     */\r\n    calculateBuyNItem(item, amount, currentScore = 0) {\r\n        if (typeof amount === 'number') {\r\n            let quantity = item.quantity;\r\n            let count = item.quantity + amount;\r\n            let modifier = item.costModifier;\r\n            let cost = item.baseCost;\r\n            let price = 0;\r\n\r\n            for (let i = 0; i < count; i++) {\r\n                if (i > 0) cost *= modifier;\r\n                if ( (i+1) > quantity) price += cost;\r\n            }\r\n\r\n            return price;\r\n\r\n        } else if (amount === 'max') {\r\n            let cost = 0;\r\n            let price = 0;\r\n            let iterator = 1;\r\n            while ( (price = this.calculateBuyNItem(item, iterator)) < currentScore) {\r\n                iterator += 1;\r\n                cost = price;\r\n            }\r\n            return ((iterator - 1) === 0) ? {\r\n                cost: price,\r\n                amount: 1\r\n            } : {\r\n                cost: cost,\r\n                amount: (iterator - 1)\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nconst gameFunctions = new gameFunctionsClass()\r\n\r\nexport default gameFunctions;\r\n","let instance;\r\n\r\nclass LoggerClass {\r\n    constructor() {\r\n        if (instance) {\r\n            return instance;\r\n        }\r\n        instance = this;\r\n    }\r\n\r\n    /**\r\n     * @param options {object}\r\n     */\r\n    log(options) {\r\n        if (console) {\r\n            console.table(options);\r\n        }\r\n    }\r\n}\r\n\r\nlet Logger = new LoggerClass();\r\n\r\nexport default Logger;\r\n","export default class Item {\r\n\r\n    id;\r\n    name;\r\n    baseCost;\r\n    basePerSecondMultiplier = 1.0;\r\n    costModifier;\r\n    quantity;\r\n    perSecond;\r\n    perSecondMultiplier;\r\n    canShow;\r\n    manager;\r\n    items;\r\n    multipliers;\r\n    prices = {\r\n        one: 0.0,\r\n        five: 0.0,\r\n        ten: 0.0,\r\n        hundred: 0.0\r\n    };\r\n\r\n    constructor(\r\n        name = '',\r\n        baseCost = 1.0,\r\n        costModifier = 1.009,\r\n        quantity = 1,\r\n        perSecond = 1,\r\n        perSecondMultiplier = 1.0,\r\n        manager = true,\r\n        multipliers = [],\r\n        items = [],\r\n    ) {\r\n        this.name = name;\r\n        this.baseCost = baseCost;\r\n        this.costModifier = costModifier;\r\n        this.quantity = quantity;\r\n        this.perSecond = perSecond;\r\n        this.perSecondMultiplier = perSecondMultiplier;\r\n        this.basePerSecondMultiplier = perSecondMultiplier;\r\n        this.manager = manager;\r\n        this.multipliers = multipliers;\r\n        this.items = items;\r\n        this.prices.one = baseCost;\r\n    }\r\n}\r\n","export default class ItemMultiplier {\r\n    expression;\r\n    multiplier = 1.0;\r\n    label = '';\r\n    active = false;\r\n\r\n    constructor(expression, multiplier = 1.0, label = '', active = false) {\r\n        this.expression = expression;\r\n        this.multiplier = multiplier;\r\n        this.label = label;\r\n        this.active = active;\r\n    }\r\n}\r\n","import Item from \"../classes/Item\";\r\nimport ItemMultiplier from \"../classes/ItemMultiplier\"\r\nimport gameFunctions from \"../utilities/gameFunctions\";\r\n\r\n/**\r\n * items\r\n * @type {Item[]}\r\n */\r\nconst items = [\r\n    new Item('Barstaff', 10000, 1.009, 0, 10, 1.0, true, [\r\n        new ItemMultiplier((item) => (Math.floor(item.quantity/100)), 0.5, 'Multiplied by .5 per 100'),\r\n        new ItemMultiplier((item) => (Math.floor(item.quantity/1000)), 0.5, 'Multiplied by .5 per 1000'),\r\n    ], [\r\n        new Item('Bard', 100000, 1.009, 0, 50, 1.0, true, [\r\n            new ItemMultiplier((item) => (Math.floor(item.quantity/150)), 0.5, 'Multiplied by .5 per 100')\r\n        ], [])\r\n    ]),\r\n\r\n    new Item('Miner', 1000000, 1.009, 0, 100, 1.0, true, [\r\n        new ItemMultiplier((item) => (Math.floor(item.quantity/100)), 1.0, 'Multiplied by 2.0 per 100')\r\n    ], [\r\n        new Item('Super Miner', 100000000, 1.009, 0, 1000, 1.0, true, [], [\r\n            new Item('Mega Miner', 10000000000, 1.009, 0, 1000, 1.0, true, [], [])\r\n        ])\r\n    ]),\r\n    new Item('Adventurer', 1000000000000, 1.009, 0, 1000000, 1.0, true, [], []),\r\n    new Item('Orc Warrior', 100000000000000, 1.009, 0, 10000000, 1.0, true, [], [])\r\n];\r\n\r\nfunction addProps(debug = false, items, startingIndex = 0) {\r\n\r\n    items.forEach((item) => {\r\n        if(debug) {\r\n            item.baseCost *= 0.01;\r\n        }\r\n        item.id = startingIndex++;\r\n        item.canShow = false;\r\n        item.prices = gameFunctions.calculateItemPrices(item);\r\n\r\n        if (item.items) {\r\n            item.items = addProps(debug, item.items);\r\n        }\r\n    });\r\n\r\n    return items;\r\n}\r\n\r\nexport default function gameData(debug = false) {\r\n    return addProps(debug, items);\r\n}\r\n","import React from \"react\";\r\nimport \"./stats.scss\";\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\n\r\nexport default class Stats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showStats: false\r\n        };\r\n    }\r\n\r\n    toggleStatsDisplay() {\r\n        this.setState({\r\n            showStats: !this.state.showStats\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const debug = !this.props.debug ? '' : <li className=\"debugMessage\">DEBUG MODE IS ON</li>;\r\n        const clickDebug = !this.props.debugClickDefaultItem ?\r\n            ''\r\n            :\r\n            <li className=\"debugMessage\">DEBUG DEFAULT ITEM CLICK IS ON (EACH CLICK: {gameFunctions.formatInteger(this.props.debugClickDefaultItem)})</li>\r\n        ;\r\n        const stats = this.state.showStats ?\r\n            <ul>\r\n                {debug}\r\n                {clickDebug}\r\n                <li>FPS: {this.props.FPS}</li>\r\n                <li>Tick Duration (ms): {gameFunctions.formatNumber(this.props.tickLength)}</li>\r\n                <li>Per Tick: {gameFunctions.formatNumber((this.props.perSecond * this.props.perSecondMultiplier) / 1000 * this.props.FPS)}</li>\r\n                <li>Per Second: {gameFunctions.formatNumber(this.props.perSecond * this.props.perSecondMultiplier)}</li>\r\n                <li>Per 10 Seconds: {gameFunctions.formatNumber(this.props.perSecond * this.props.perSecondMultiplier * 10)}</li>\r\n                <li>Salary Time: {this.props.salaryTime}</li>\r\n                <li>Max Wealth: {gameFunctions.formatScore(this.props.maxScore)}</li>\r\n                <li>Current Wealth: {gameFunctions.formatScore(this.props.currentScore)}</li>\r\n                <li>Salary: {gameFunctions.formatScore(this.props.salary)}</li>\r\n                <li>Default Items Bought: {gameFunctions.formatInteger(this.props.defaultItemClicks)}</li>\r\n            </ul> : '';\r\n        return (\r\n            <div className=\"stats\">\r\n                <p className=\"toggleDisplay\" onClick={() => this.toggleStatsDisplay()}>Stats</p>\r\n                {stats}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\nimport './itemlist.scss';\r\n\r\nexport default class ItemList extends React.Component {\r\n\r\n    pluralise(word, amount) {\r\n        if (word === 'Barstaff') {\r\n            return word;\r\n        }\r\n        return (amount === 0 || amount > 1) ? word + 's' : word;\r\n    }\r\n\r\n    multipliers(item) {\r\n        if (!item.multipliers) {\r\n            return;\r\n        }\r\n        return item.multipliers.map((multiplier, index) => {\r\n            if (multiplier.active) {\r\n                return (\r\n                    <p key={index}>{multiplier.label}</p>\r\n                );\r\n            }\r\n            return '';\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const markup = this.props.items.map((item) => {\r\n            const itemIds = this.props.parents.slice().concat(item.id);\r\n            let max = gameFunctions.calculateBuyNItem(item, 'max', this.props.currentScore);\r\n            return (\r\n                <li key={item.id} className={item.canShow ? '' : 'hidden'}>\r\n                    <div className=\"itemContainer\">\r\n                        <p>{item.quantity} {this.pluralise(item.name, item.quantity)} @ {gameFunctions.formatNumber((item.quantity * item.perSecond) * item.perSecondMultiplier)} per second</p>\r\n                        <div className=\"buyButtons\">\r\n                            <button\r\n                                disabled={(this.props.currentScore < item.prices.one)}\r\n                                onClick={() => this.props.purchaseItem(itemIds, 1, item.prices.one)}\r\n                            >\r\n                                Hire 1<br/>{gameFunctions.formatScore(item.prices.one)}\r\n                            </button>\r\n\r\n                            <button\r\n                                disabled={(this.props.currentScore < item.prices.five)}\r\n                                onClick={() => this.props.purchaseItem(itemIds, 5, item.prices.five)}\r\n                            >\r\n                                Hire 5<br/>{gameFunctions.formatScore(item.prices.five)}\r\n                            </button>\r\n                            <button\r\n                                disabled={(this.props.currentScore < item.prices.ten)}\r\n                                onClick={() => this.props.purchaseItem(itemIds, 10, item.prices.ten)}\r\n                            >\r\n                                Hire 10<br/>{gameFunctions.formatScore(item.prices.ten)}\r\n                            </button>\r\n                            <button\r\n                                disabled={(this.props.currentScore < item.prices.hundred)}\r\n                                onClick={() => this.props.purchaseItem(itemIds, 100, item.prices.hundred)}\r\n                            >\r\n                                Hire 100<br/>{gameFunctions.formatScore(item.prices.hundred)}\r\n                            </button>\r\n                            <button\r\n                                disabled={(this.props.currentScore < max.cost)}\r\n                                onClick={() => this.props.purchaseItem(itemIds, max.amount, max.cost)}\r\n                            >\r\n                                Hire {max.amount}<br/>{gameFunctions.formatScore(max.cost)}\r\n                            </button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"multipliers\">\r\n                            {this.multipliers(item)}\r\n                        </div>\r\n\r\n                        <ItemList\r\n                            items={item.items}\r\n                            currentScore={this.props.currentScore}\r\n                            parents={itemIds}\r\n                            purchaseItem={this.props.purchaseItem}\r\n                        />\r\n                    </div>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"itemlist\">\r\n                <ul>\r\n                    {markup}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\nimport './score.scss';\r\n\r\nexport default class Score extends React.Component {\r\n    timer;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            score: this.props.currentScore\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"score\">\r\n                <p>{gameFunctions.formatScore(this.state.score)}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    tick() {\r\n\r\n        let testScore = (this.props.currentScore - this.state.score);\r\n        if (Math.abs(testScore) < 0.01) {\r\n            this.setState({score: this.props.currentScore});\r\n            return;\r\n        }\r\n\r\n        if (this.state.score !== this.props.currentScore) {\r\n            let newScore = (\r\n                (testScore)\r\n                * this.props.tickLength / 300\r\n            );\r\n            this.setState({\r\n                score: this.state.score + newScore\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            this.props.tickLength\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\nimport './salary.scss';\r\n\r\nexport default class Salary extends React.Component {\r\n    render() {\r\n        let fontSize = Math.max(20, 50 - this.props.salaryTimer);\r\n        return (\r\n            <div className=\"salary\">\r\n                <p style={{fontSize: fontSize + 'px'}}>{gameFunctions.formatScore(this.props.salary)}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './defaultItemButton.scss';\r\n\r\nexport default class DefaultItemButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        if (!this.state.disabled) {\r\n            this.props.defaultItemClickHandler()\r\n        }\r\n        this.setState({disabled: true}, () => {\r\n            setTimeout(\r\n                () => {this.setState({disabled: false})},\r\n                100\r\n            );\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"defaultItemButton\">\r\n                <button onClick={() => this.handleClick()} disabled={this.state.disabled}>Pull Pint</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Stats from \"../../components/Stats/Stats\";\r\nimport ItemList from \"../../components/ItemList/ItemList\";\r\nimport Score from \"../../components/Score/Score\";\r\nimport Salary from \"../../components/Salary/Salary\";\r\nimport DefaultItemButton from \"../../components/DefaultItemButton/DefaultItemButton\";\r\nimport './layout.scss';\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\n\r\nexport default class Layout extends React.Component {\r\n    render() {\r\n        const stats = this.props.debug ?\r\n            <Stats\r\n                FPS={this.props.FPS}\r\n                debug={this.props.debug}\r\n                tickLength={this.props.tickLength}\r\n                perSecond={this.props.perSecond}\r\n                perSecondMultiplier={this.props.perSecondMultiplier}\r\n                currentScore={this.props.currentScore}\r\n                maxScore={this.props.maxScore}\r\n                salary={this.props.salary}\r\n                salaryTime={this.props.salaryTime}\r\n                defaultItemClicks={this.props.defaultItemClicks}\r\n                debugClickDefaultItem={this.props.debugClickDefaultItem}\r\n            /> : null;\r\n\r\n        return (\r\n            <div className=\"layout\">\r\n                <div className=\"stats\">\r\n                    {stats}\r\n                </div>\r\n\r\n                <div className=\"scoreContainer\">\r\n                    <Score\r\n                        tickLength={this.props.tickLength}\r\n                        currentScore={this.props.currentScore}\r\n                        perSecond={this.props.perSecond}\r\n                        perSecondMultiplier={this.props.perSecondMultiplier}\r\n                        bonusActive={this.props.bonusActive}\r\n                        bonusMultiplier={this.props.bonusMultiplier}\r\n                        bonusDoubled={this.props.bonusDoubled}\r\n                    />\r\n                    <Salary\r\n                        salary={this.props.salary}\r\n                        salaryTimer={this.props.salaryTimer}\r\n                    />\r\n                </div>\r\n                <div className=\"items\">\r\n                    <DefaultItemButton\r\n                        defaultItemClickHandler={this.props.defaultItemClickHandler}\r\n                    />\r\n                    <ItemList\r\n                        items={this.props.items}\r\n                        currentScore={this.props.currentScore}\r\n                        parents={[]}\r\n                        purchaseItem={this.props.purchaseItem}\r\n                    />\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <h2>\r\n                        <span style={{float: 'left'}}>\r\n                            <button onClick={() => this.props.saveGame(true)}>Save Game</button>\r\n                            <button onClick={() => {if(window.confirm(\"Clear data and reload?!\")) {this.props.clearSaveData(); gameFunctions.restartGame();}} }>Clear Save &amp; Restart</button>\r\n                        </span>\r\n                        &copy; PhutureProof 2021 Version: {this.props.version}</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport gameFunctions from \"../../utilities/gameFunctions\";\r\n\r\nexport default class GameOver extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"gameOver\">\r\n                <h1>Game Over!</h1>\r\n                <p>Game Stats:</p>\r\n                <ul>\r\n                    <li>Max Wealth Achieved: {gameFunctions.formatScore(this.props.maxScore)}.</li>\r\n                    <li>Max Income: {gameFunctions.formatScore(this.props.perSecond)} per second.</li>\r\n                    <li>Number of Pints Pulled: {gameFunctions.formatInteger(this.props.defaultItemClicks)}.</li>\r\n                </ul>\r\n                <button onClick={() => gameFunctions.restartGame()}>Restart</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Lore extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"lore\">\r\n                <h2>Intro</h2>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n                    Asperiores cumque enim incidunt nulla qui reiciendis voluptatibus?\r\n                    Aperiam architecto culpa est excepturi maiores praesentium reprehenderit?\r\n                    Aliquam beatae enim quidem quisquam totam!\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about\">\r\n                <h2>About</h2>\r\n                <p>Some stuff about the game.</p>\r\n                <p>Created by PhutureProof 2021.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact\">\r\n                <h2>Contact</h2>\r\n                <form>\r\n                    <div className=\"group\">\r\n                        <label htmlFor={\"email\"}>Email:</label>\r\n                        <input type=\"text\" name=\"email\" id=\"email\"/>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label htmlFor=\"message\">Message:</label>\r\n                        <textarea name=\"message\" id=\"message\" rows=\"10\" />\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <button type={\"button\"}>Send Message</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './advert.scss';\r\n\r\nexport default class Advert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bonusAmount: 1,\r\n            bonusMultiplier: false\r\n        };\r\n        this.selectBonusAmount = this.selectBonusAmount.bind(this);\r\n        this.selectBonusMultiplier = this.selectBonusMultiplier.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    selectBonusAmount(e) {\r\n        this.setState({\r\n            bonusAmount: Number(e.target.value)\r\n        });\r\n    }\r\n\r\n    selectBonusMultiplier(e) {\r\n        this.setState({\r\n            bonusMultiplier: (e.target.value === 'true')\r\n        });\r\n    }\r\n\r\n    handleSubmit() {\r\n        this.props.adHandler(this.state.bonusAmount, this.state.bonusMultiplier);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"advert\">\r\n                <h2>Advert</h2>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"group\">\r\n                        <label>Select Bonus:</label>\r\n                        <select name=\"bonus\" id=\"bonus\" onChange={this.selectBonusAmount}>\r\n                            <option value=\"1\">No Bonus</option>\r\n                            <option value=\"2\">2x</option>\r\n                            <option value=\"3\">3x</option>\r\n                            <option value=\"4\">4x</option>\r\n                            <option value=\"5\">5x</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label>Bonus Doubled:</label>\r\n                        <select name=\"bonus\" id=\"bonus\" onChange={this.selectBonusMultiplier}>\r\n                            <option value=\"false\">No</option>\r\n                            <option value=\"true\">Yes</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <label />\r\n                        <button>\r\n                            Activate Bonus\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport gameFunctions from '../../utilities/gameFunctions';\r\nimport Logger from \"../../utilities/Logger\";\r\nimport gameData from \"../../data/gameData\";\r\nimport Layout from \"../../views/Layout/Layout\";\r\nimport GameOver from \"../../views/GameOver/GameOver\";\r\nimport Lore from \"../../views/Lore/Lore\";\r\nimport About from \"../../views/About/About\";\r\nimport Contact from \"../../views/Contact/Contact\";\r\nimport Advert from \"../../views/Advert/Advert\";\r\nimport \"./game.scss\";\r\n\r\nexport default class Game extends React.Component {\r\n\r\n    /* Frames Per Second */\r\n    FPS = 60;\r\n\r\n    /* timers */\r\n    timers = {\r\n        defaults: {\r\n            /* change these (values are time in seconds) */\r\n            salaryTimer: 60,\r\n            bonusTimer: 900,\r\n            saveTimer: 300,\r\n        },\r\n        /* dont change these */\r\n        salaryTimer: 0,\r\n        bonusTimer: 0,\r\n        saveTimer: 0\r\n    };\r\n\r\n    /* debug mode */\r\n    debug = true;\r\n    /* gameData debug mode */\r\n    debugGameData = false;\r\n    /* debug click default item (false|integer)*/\r\n    debugClickDefaultItem = false;\r\n    /* globalise game to the window : allows console access to game */\r\n    globalGame = false;\r\n\r\n    views = {\r\n        layout: 'layout',\r\n        gameover: 'gameover',\r\n        advert: 'advert',\r\n        lore: 'lore',\r\n        about: 'about',\r\n        contact: 'contact'\r\n    }\r\n\r\n    /* Auto calculated */\r\n    tickLength;\r\n    timer;\r\n    salaryTimer;\r\n    saveTimer;\r\n    currentScore;\r\n    numberFormat;\r\n\r\n    initialState = {\r\n        defaultItemClicks: 0,\r\n        perSecond: 0.0,\r\n        perSecondMultiplier: 1.0,\r\n        currentScore: 0,\r\n        maxScore: 0.0,\r\n        salary: 0.0,\r\n        gameOver: false,\r\n        items: [],\r\n        bonusActive: false,\r\n        bonusDoubled: false,\r\n        bonusMultiplier: 1,\r\n        view: this.views.layout,\r\n        timers: {}\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.tickLength = 1000 / this.FPS;\r\n        this.state = this.initialState;\r\n        this.doBindings();\r\n        if (this.globalGame) {\r\n            window.game = this;\r\n        }\r\n    }\r\n\r\n    doBindings() {\r\n        this.defaultItemClickHandler = this.defaultItemClickHandler.bind(this);\r\n        this.purchaseItem = this.purchaseItem.bind(this);\r\n        this.saveGame = this.saveGame.bind(this);\r\n        this.loadGame = this.loadGame.bind(this);\r\n        this.clearSaveData = this.clearSaveData.bind(this);\r\n        this.onFocus = this.onFocus.bind(this);\r\n        this.onBlur = this.onBlur.bind(this);\r\n        this.adHandler = this.adHandler.bind(this);\r\n        this.changeView = this.changeView.bind(this);\r\n    }\r\n\r\n    changeView(view) {\r\n        this.setState({view: view});\r\n    }\r\n\r\n    render() {\r\n        let markup;\r\n        switch (this.state.view) {\r\n            case this.views.layout:\r\n            default:\r\n                markup =\r\n                    <Layout\r\n                        title={this.props.title}\r\n                        version={this.props.version}\r\n                        debug={this.debug}\r\n                        FPS={this.FPS}\r\n                        bonusActive={this.state.bonusActive}\r\n                        bonusMultiplier={this.state.bonusMultiplier}\r\n                        bonusDoubled={this.state.bonusDoubled}\r\n                        tickLength={this.tickLength}\r\n                        perSecond={this.state.perSecond}\r\n                        perSecondMultiplier={this.state.perSecondMultiplier}\r\n                        currentScore={this.state.currentScore}\r\n                        maxScore={this.state.maxScore}\r\n                        salary={this.state.salary}\r\n                        salaryTime={this.timers.defaults.salaryTime}\r\n                        salaryTimer={this.timers.salaryTimer}\r\n                        gameOver={this.state.gameOver}\r\n                        items={this.state.items}\r\n                        purchaseItem={this.purchaseItem}\r\n                        defaultItemClickHandler={this.defaultItemClickHandler}\r\n                        defaultItemClicks={this.state.defaultItemClicks}\r\n                        debugClickDefaultItem={this.debugClickDefaultItem}\r\n                        saveGame={this.saveGame}\r\n                        clearSaveData={this.clearSaveData}\r\n                        adHandler={this.adHandler}\r\n                    />\r\n                break;\r\n\r\n            case this.views.gameover:\r\n                markup =\r\n                    <GameOver\r\n                        maxScore={this.state.maxScore}\r\n                        perSecond={this.state.perSecond}\r\n                        defaultItemClicks={this.state.defaultItemClicks}\r\n                        items={this.state.items}\r\n                    />\r\n                break;\r\n            case this.views.lore:\r\n                markup =\r\n                    <Lore\r\n                        items={this.state.items}\r\n                    />\r\n                ;\r\n                break;\r\n            case this.views.about:\r\n                markup = <About />;\r\n                break;\r\n            case this.views.contact:\r\n                markup = <Contact />\r\n                break;\r\n            case this.views.advert:\r\n                markup =\r\n                    <Advert\r\n                        adHandler={this.adHandler}\r\n                    />\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"appTitle\">\r\n                    <h1>{this.props.title}</h1>\r\n                </div>\r\n                <div className=\"navigation\">\r\n                    <button onClick={() => this.changeView(this.views.layout)}>Home</button>\r\n                    <button onClick={() => this.changeView(this.views.gameover)}>Game Over</button>\r\n                    <button onClick={() => this.changeView(this.views.lore)}>Lore</button>\r\n                    <button onClick={() => this.changeView(this.views.about)}>About</button>\r\n                    <button onClick={() => this.changeView(this.views.contact)}>Contact</button>\r\n                    <button onClick={() => this.changeView(this.views.advert)}>Advert</button>\r\n                </div>\r\n                <div className=\"view\">\r\n                    {markup}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    adHandler(multiplier = 1, doubled = false) {\r\n        this.timers.bonusTimer = (multiplier > 1) ? this.timers.defaults.bonusTimer : 0;\r\n        this.setState({\r\n            view: this.views.layout,\r\n            bonusActive: (multiplier > 1),\r\n            bonusDoubled: doubled,\r\n            bonusMultiplier: multiplier,\r\n        }, () => {\r\n            this.saveGame(false);\r\n        });\r\n    }\r\n\r\n    clearSaveData() {\r\n        let storage = window.localStorage;\r\n        storage.removeItem('gameData');\r\n        if (this.debug) {\r\n            Logger.log({\r\n                message: 'Clearing saved game data'\r\n            });\r\n        }\r\n    }\r\n\r\n    saveGame(showToast = false) {\r\n        let storage = window.localStorage;\r\n        let saveData = {...this.state};\r\n        saveData.timers = {...this.timers};\r\n        saveData.timestamp = Date.now();\r\n        storage.setItem('gameData', JSON.stringify(saveData));\r\n        if (showToast) {\r\n            this.props.showToast('Game saved', 'info');\r\n        }\r\n        if (this.debug) {\r\n            Logger.log({\r\n                message: 'Saving game state',\r\n                saveData: saveData\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    loadGame(showToast = false) {\r\n        let storage = window.localStorage;\r\n        let state = JSON.parse(storage.getItem('gameData'));\r\n        if (!state) {\r\n            return;\r\n        }\r\n        this.timers = {...state.timers};\r\n        delete state.timers;\r\n\r\n        let defaultItems = gameData(this.debugGameData);\r\n        this.mapItemMultipliers(defaultItems, state.items);\r\n        state.items = gameFunctions.calculateItemMultipliers(state.items);\r\n\r\n        let date = Date.now();\r\n        let diff = Math.floor((date - state.timestamp) / 1000);\r\n        let toAdd = (state.perSecond * state.perSecondMultiplier) * diff;\r\n\r\n        if (toAdd > 0) {\r\n            state.currentScore += toAdd;\r\n        }\r\n\r\n        this.setState(\r\n            state,\r\n            () => {\r\n                if (!this.timer) {\r\n                    this.startTicking()\r\n                }\r\n            }\r\n        );\r\n\r\n        if (this.debug) {\r\n            Logger.log(state);\r\n        }\r\n\r\n        if (showToast && toAdd > 0) {\r\n            let score = <span className=\"score\">{gameFunctions.formatScore(toAdd)}</span>\r\n            let toastMessage = <p>Your staff earned {score} while you were away!</p>;\r\n            this.props.showToast(toastMessage, 'success');\r\n        }\r\n\r\n    }\r\n\r\n    mapItemMultipliers(defaultItems, stateItems) {\r\n        Array.from(defaultItems).forEach(dItem => {\r\n            stateItems.forEach(sItem => {\r\n                if (dItem.id === sItem.id) {\r\n                    sItem.multipliers = dItem.multipliers;\r\n                }\r\n                if (sItem.items) {\r\n                    this.mapItemMultipliers(defaultItems, sItem.items);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    gameTimers() {\r\n        // salary timer\r\n        if (this.state.salary > 0) {\r\n            if (this.timers.salaryTimer === 0) {\r\n                this.takeSalary();\r\n                this.timers.salaryTimer = this.timers.defaults.salaryTimer;\r\n            } else {\r\n                this.timers.salaryTimer--;\r\n            }\r\n            if (this.debug) {\r\n                Logger.log({\r\n                    message: 'salary timer',\r\n                    value: this.timers.salaryTimer\r\n                });\r\n            }\r\n        }\r\n\r\n        // bonus timer\r\n        if (this.state.bonusActive) {\r\n\r\n            if (this.debug) {\r\n                Logger.log({\r\n                    message: 'bonus timer',\r\n                    value: this.timers.bonusTimer\r\n                });\r\n            }\r\n\r\n            if (this.timers.bonusTimer === 0) {\r\n                this.setState({\r\n                    bonusActive: false,\r\n                    bonusDoubled: false,\r\n                    bonusMultiplier: 1\r\n                });\r\n                this.timers.bonusTimer = this.timers.defaults.bonusTimer;\r\n            } else {\r\n                this.timers.bonusTimer--;\r\n            }\r\n        }\r\n\r\n        // auto save timer\r\n        if (this.debug) {\r\n            Logger.log({\r\n                message: 'save timer',\r\n                value: this.timers.saveTimer\r\n            });\r\n        }\r\n\r\n        if (this.timers.saveTimer === 0) {\r\n            this.saveGame();\r\n            this.timers.saveTimer = this.timers.defaults.saveTimer;\r\n        } else {\r\n            this.timers.saveTimer--;\r\n        }\r\n\r\n        this.setState({\r\n            timers: {...this.timers}\r\n        });\r\n    }\r\n\r\n    perTickCalculations() {\r\n        let newScore = (this.state.perSecond * this.state.perSecondMultiplier);\r\n        if (this.state.bonusActive) {\r\n            newScore *= this.state.bonusMultiplier;\r\n            newScore *= ((this.state.bonusDoubled) ? 2 : 1);\r\n        }\r\n        newScore += this.state.currentScore;\r\n\r\n        let newMaxScore = newScore > this.state.maxScore ? newScore : this.state.maxScore;\r\n        let items = gameFunctions.canShowItems(this.state.items, this.state.currentScore);\r\n\r\n\r\n        this.setState({\r\n            currentScore: newScore,\r\n            maxScore: newMaxScore,\r\n            items: items,\r\n            salary: gameFunctions.calculateSalary(this.state.perSecond)\r\n        });\r\n    }\r\n\r\n    tick() {\r\n        this.gameTimers();\r\n        this.perTickCalculations();\r\n    }\r\n\r\n    defaultItemClickHandler() {\r\n        let amount = 100;\r\n\r\n        if (this.debugClickDefaultItem) {\r\n            amount = this.debugClickDefaultItem;\r\n        }\r\n\r\n        amount *= this.state.bonusMultiplier;\r\n        if (this.state.bonusActive) {\r\n            let bonusMultiplier = (this.state.bonusDoubled) ? 2 : 1;\r\n            amount *= bonusMultiplier;\r\n        }\r\n\r\n        let newScore = (this.state.currentScore + amount);\r\n        let clicks = (this.state.defaultItemClicks + amount);\r\n\r\n        this.setState({\r\n            currentScore: newScore,\r\n            defaultItemClicks: clicks\r\n        });\r\n        if (this.debug) {\r\n            Logger.log({\r\n                message: 'Purchasing default item',\r\n                clicks: clicks\r\n            });\r\n        }\r\n    }\r\n\r\n    startTicking() {\r\n        this.timer = setInterval(\r\n            () => this.tick(),\r\n            1000\r\n        );\r\n    }\r\n\r\n    stopTicking() {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        //window.addEventListener(\"focus\", this.onFocus);\r\n        //window.addEventListener(\"blur\", this.onBlur);\r\n        let storage = window.localStorage;\r\n        if (storage.getItem('gameData')) {\r\n            this.loadGame(true);\r\n        } else {\r\n            this.setState({\r\n                items: gameData(this.debugGameData)\r\n            }, () => {\r\n                this.setState({\r\n                    perSecond: gameFunctions.calculatePerSecond(this.state.items)\r\n                }, () => {\r\n                    this.startTicking();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //window.removeEventListener(\"focus\", this.onFocus);\r\n        //window.removeEventListener(\"blur\", this.onBlur);\r\n        this.stopTicking();\r\n    }\r\n\r\n    onFocus() {\r\n        if (this.debug) {\r\n            Logger.log(\"Gained Focus\");\r\n        }\r\n        this.loadGame(true);\r\n    }\r\n\r\n    onBlur() {\r\n        if (this.debug) {\r\n            Logger.log(\"Lost Focus\");\r\n        }\r\n        this.saveGame();\r\n        this.stopTicking();\r\n    }\r\n\r\n    takeSalary() {\r\n        let newScore = (this.state.currentScore - this.state.salary);\r\n        if (newScore < 0) {\r\n            this.stopTicking();\r\n            this.clearSaveData();\r\n            this.setState({\r\n                gameOver: true\r\n            });\r\n        }\r\n        this.setState({\r\n            currentScore: newScore\r\n        });\r\n        if (this.debug) {\r\n            Logger.log({\r\n                message: 'Taking salary',\r\n                amount: gameFunctions.formatNumber(this.state.salary)\r\n            })\r\n        }\r\n    }\r\n\r\n    purchaseItem(itemIds, quantity = 1, cost = 0) {\r\n        /** @type {Item} **/\r\n        let foundItem;\r\n        let items = this.state.items.slice();\r\n\r\n\r\n        itemIds.forEach(id => {\r\n            foundItem = foundItem ? foundItem.items[id] : items[id];\r\n        });\r\n\r\n        if (!foundItem) {\r\n            if (this.debug) {\r\n                Logger.log({\r\n                    message: \"Could not find item for purchase!\",\r\n                    itemIds: itemIds,\r\n                    quantity: quantity\r\n                });\r\n            }\r\n        } else {\r\n            foundItem.quantity += quantity;\r\n            foundItem.prices = gameFunctions.calculateItemPrices(foundItem);\r\n            items = gameFunctions.calculateItemMultipliers(items);\r\n\r\n            if (this.debug) {\r\n                Logger.log({\r\n                    message: `Purchasing ${foundItem.name}`,\r\n                    price: cost\r\n                });\r\n            }\r\n\r\n            this.setState({\r\n                items: items,\r\n                currentScore: (this.state.currentScore - cost)\r\n            }, () => {\r\n                this.setState({\r\n                    perSecond: gameFunctions.calculatePerSecond(this.state.items),\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Game from \"./components/Game/Game\";\r\nimport { ToastContainer, toast} from \"react-toastify\";\r\nimport './App.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    showToast(message, type = 'success') {\r\n        let toastOptions = {\r\n            position: 'top-center',\r\n        };\r\n        switch(type) {\r\n            case \"success\":\r\n                toast.success(message, toastOptions);\r\n                break;\r\n            case \"error\":\r\n                toast.error(message, toastOptions);\r\n                break;\r\n            default:\r\n                toast(message, toastOptions);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Game\r\n                    title=\"Adventurer's Inn\"\r\n                    version=\"0.14.66\"\r\n                    showToast={this.showToast.bind(this)}\r\n                />\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n/* import reportWebVitals from './reportWebVitals'; */\nimport App from \"./App\";\nimport './index.scss';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}